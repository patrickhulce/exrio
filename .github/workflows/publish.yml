name: Publish PyPi

on:
  pull_request:
    branches:
      - main

jobs:
  macos:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: arm64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels - arm64
        uses: PyO3/maturin-action@v1
        with:
          target: arm64
          args: --release --out dist --sdist -m rust/Cargo.toml
      - name: Install built wheel - arm64
        run: |
          pip install "numpy<2"
          pip install exrio --no-index --find-links dist --force-reinstall
          python -c "import exrio"
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: --release --out dist -m rust/Cargo.toml
      - name: Install built wheel - universal2
        run: |
          pip install "numpy<2"
          pip install exrio --no-index --find-links dist --force-reinstall
          python -c "import exrio"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m rust/Cargo.toml
      - name: Install built wheel
        run: |
          pip install "numpy<2"
          pip install exrio --no-index --find-links dist --force-reinstall
          python -c "import exrio"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.9
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist -m rust/Cargo.toml
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install "numpy<2"
        pip install exrio --no-index --find-links dist --force-reinstall
        python -c "import exrio"
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ macos, windows, linux ]
    environment:
      name: pypi-test
      url: https://test.pypi.org/p/exrio
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels
      - name: publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
